// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sanchitdeora/go-url-shortener/urlshort (interfaces: Service)

// Package mock_urlshort is a generated GoMock package.
package mock_urlshort

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetCompleteUrl mocks base method.
func (m *MockService) GetCompleteUrl(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompleteUrl", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCompleteUrl indicates an expected call of GetCompleteUrl.
func (mr *MockServiceMockRecorder) GetCompleteUrl(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompleteUrl", reflect.TypeOf((*MockService)(nil).GetCompleteUrl), arg0, arg1)
}

// GetShortenedUrl mocks base method.
func (m *MockService) GetShortenedUrl(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShortenedUrl", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShortenedUrl indicates an expected call of GetShortenedUrl.
func (mr *MockServiceMockRecorder) GetShortenedUrl(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShortenedUrl", reflect.TypeOf((*MockService)(nil).GetShortenedUrl), arg0, arg1)
}

// UrlShortener mocks base method.
func (m *MockService) UrlShortener(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UrlShortener", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UrlShortener indicates an expected call of UrlShortener.
func (mr *MockServiceMockRecorder) UrlShortener(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UrlShortener", reflect.TypeOf((*MockService)(nil).UrlShortener), arg0, arg1)
}
